<?xml version="1.0" encoding="utf-8" ?>
<!-- ====================================================================== 
     EPPIC WebUI    
                   
     	An ant script to build the EPPIC WebUI package. The default target "war" will clean,
     	compile the java code, compile the gwt code to js and 
     	create a ewui.war archive 
		Script modified from the one in GWT web site: 
		http://code.google.com/webtoolkit/doc/latest/RefCommandLineTools.html#webAppCreator
		      	
     ====================================================================== -->
<project name="ewui" default="war" basedir=".">

  <property name= "javaversion" value="1.6"/>
	
  <property name="libs.dir" location="libs"/>
  <!-- ideally we should use the GWT from eclipse by calling the relative path to it,
  but I don't know how to get the path to the eclipse root.
  That's why we simply need to keep the gwt libraries in the libs directory 
  under subdir gwt (at the moment linking in file system) -->
  <!-- NOTE we also need to keep the crk.jar in libs (at the moment also linking in file system) -->
  <property name="gwt.sdk" location="${libs.dir}/gwt"/>

  <!-- Number of threads used for the gwtc compilation step (some of it will run in parallel), speeds up a bit
       Ideally this should be read automatically from the system, couldn't find how to do that yet -->
  <property name="num.threads" value="2"/>
	
  <path id="project.class.path">
    <pathelement location="${gwt.sdk}/gwt-user.jar"/>
    <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
  	<fileset dir="${gwt.sdk}" includes="validation*.jar"/>
  	<!-- <pathelement location="war/WEB-INF/classes"/> -->
    <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
  </path>

	
  <target name="libs" description="Copy libs to WEB-INF/lib">
    <mkdir dir="war/WEB-INF/lib" />
    <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
  	<copy todir="war/WEB-INF/lib">
  		<fileset dir="${libs.dir}" excludes="gwt*/**"></fileset>
  	</copy>
  </target>

	
  <target name="javac" depends="libs" description="Compile java source">
    <mkdir dir="war/WEB-INF/classes"/>
  	
  	<javac destdir="war/WEB-INF/classes" sourcepath=".apt_generated" 
  		source="${javaversion}" 
  		target="${javaversion}" > 
        <src path="src"/>
        <classpath refid="project.class.path"/>
    </javac>
  </target>
	
  <target name="cp-src">
	<mkdir dir="war/WEB-INF/classes"/>
      <copy includeemptydirs="false" todir="war/WEB-INF/classes">
          <fileset dir="src"></fileset>
      </copy>
      <copy includeemptydirs="false" todir="war/WEB-INF/classes">
          <fileset dir=".apt_generated"></fileset>
      </copy>
  </target>

  <target name="gwtc" depends="javac,cp-src" description="GWT compile to JavaScript">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
		<pathelement location="war/WEB-INF/classes"></pathelement>
        <path refid="project.class.path"/>
      </classpath>
      <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
      <!-- beware that if more localWorkers (i.e. threads) are required than memory requirements go up quickly -->
      <jvmarg value="-Xss16M"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <!-- <arg value="-validateOnly"/> -->
      <arg value="-localWorkers"/>
      <arg value="${num.threads}"/>
      <arg value="ch.systemsx.sybit.crkwebui.Crkwebui"/>

    </java>
  </target>

  <!-- still not implemented correctly -->
  <target name="devmode" depends="javac" description="Run development mode">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      </classpath>
      <jvmarg value="-Xmx256M"/>
      <arg value="-startupUrl"/>
      <arg value="Foo.html"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg value="ch.systemsx.sybit.crkwebui.Crkwebui"/>
    </java>
  </target>

<!-- 	
  <target name="javac.tests" depends="javac" description="Compiles test code">
    <javac srcdir="test" includes="**" encoding="utf-8"
      source="1.5" target="1.5" nowarn="true"
      debug="true" debuglevel="lines,vars,source">
      <classpath location="C:\junit\junit-3.8.1.jar"/>
      <classpath refid="project.class.path"/>
    </javac>
  </target>

  <target name="test.dev" depends="javac.tests" description="Run development mode tests">
    <mkdir dir="reports/htmlunit.dev" />
    <junit fork="yes" printsummary="yes" haltonfailure="yes">
      <jvmarg line="-Xmx256m" />
      <sysproperty key="gwt.args" value="-logLevel WARN" />
      <sysproperty key="java.awt.headless" value="true" />
      <classpath>
        <pathelement location="src" />
        <pathelement location="test" />
        <path refid="project.class.path" />
        <pathelement location="C:\junit\junit-3.8.1.jar" />
      </classpath>
      <batchtest todir="reports/htmlunit.dev" >
        <fileset dir="test" >
          <include name="**/*Test.java" />
        </fileset>
      </batchtest>
      <formatter type="plain" />
      <formatter type="xml" />
    </junit>
  </target>

  <target name="test.prod" depends="javac.tests" description="Run production mode tests">
    <mkdir dir="reports/htmlunit.prod" />
    <junit fork="yes" printsummary="yes" haltonfailure="yes">
      <jvmarg line="-Xmx256m" />
      <sysproperty key="gwt.args" value="-prod -logLevel WARN -out www-test" />
      <sysproperty key="java.awt.headless" value="true" />
      <classpath>
        <pathelement location="src" />
        <pathelement location="test" />
        <path refid="project.class.path" />
        <pathelement location="C:\junit\junit-3.8.1.jar" />
      </classpath>
      <batchtest todir="reports/htmlunit.prod" >
        <fileset dir="test" >
          <include name="**/*Test.java" />
        </fileset>
      </batchtest>
      <formatter type="plain" />
      <formatter type="xml" />
    </junit>
  </target>

  <target name="test" description="Run development and production mode tests">
    <antcall target="test.dev" />
    <antcall target="test.prod" />
  </target>
-->
  <target name="hosted" depends="devmode" description="Run development mode (NOTE: the 'hosted' target is deprecated)" />

  <target name="build" depends="gwtc" description="Build this project" />

  <!-- Note we clean the war but not classes (not to repeat the javac compiling 
  if already done. If ant executed from eclipse that's a lot more convenient because eclipse compiles 
  the java code automatically -->
  <target name="war" depends="clean-exceptclasses,build" description="Create a war file">
    <zip destfile="ewui.war" basedir="war"/>
  </target>

  <target name="clean" depends="clean-exceptclasses,clean-classes"/>
	
  <!-- A target to clean the compiled classes -->
  <target name="clean-classes" description="Cleans this project">
    <delete dir="war/WEB-INF/classes" failonerror="false" />
  </target>
	
  <!-- A target to clean the war except for resources and classes (not to repeat the javac compiling 
  if already done. If ant executed from eclipse that's a lot more convenient because eclipse compiles 
  the java code automatically -->
  <target name="clean-exceptclasses" description="Cleans this project">
  	<delete dir="war/ewui" failonerror="false" />
  	<delete>
  	  <fileset dir="war/WEB-INF/lib" excludes="**/gwt-servlet.jar" />
  	</delete>
  </target>

</project>