<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd"
	version="2.1">
	<description>EPPIC JPA entities</description>
	<package>EPPIC entities</package>

	<entity class="eppic.model.db.UserSessionDB" name="UserSession">
		<table name="UserSession" />
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>

			<basic name="sessionId"></basic>
			<basic name="timeStamp">
				<temporal>TIMESTAMP</temporal>
			</basic>
			<basic name="ip"></basic>

			<many-to-many name="jobs">
				<join-table name="UserSessionJob">
					<join-column name="userSession_uid"
						referenced-column-name="uid" />
					<inverse-join-column name="job_uid"
						referenced-column-name="uid" />
				</join-table>
			</many-to-many>
		</attributes>
	</entity>

	<entity class="eppic.model.db.JobDB" name="Job">
		<table name="Job">
			<!-- Whenever a job is invoked, the table has to be searched for jobIds, this index is very important! -->
			<index name="jobId_idx" column-list="jobId" unique="true"></index>
			<!-- The JobStatusUpdater polls jobs with certain status every few seconds to add any finished jobs -->
			<index name="status_idx" column-list="status" unique="false"></index>
		</table>
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="jobId"></basic>
			<basic name="status">
				<column length="15" />
			</basic>
			<basic name="email"></basic>
			<basic name="ip">
				<column length="20" />
			</basic>
			<basic name="inputName"></basic>
			<basic name="submissionDate">
				<temporal>TIMESTAMP</temporal>
			</basic>
			<basic name="inputType"></basic>
			<basic name="submissionId"></basic>

			<one-to-one name="pdbInfo" mapped-by="job">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-one>

			<many-to-many name="userSessions" mapped-by="jobs">
				<cascade>
					<cascade-all />
				</cascade>
			</many-to-many>
		</attributes>
	</entity>

	<entity class="eppic.model.db.PdbInfoDB" name="PdbInfo">
		<table name="PdbInfo" />
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="pdbCode">
				<column length="4" />
			</basic>
			<basic name="title">
				<column length="10000" />
			</basic>
			<basic name="releaseDate"></basic>
			<basic name="spaceGroup">
				<column length="10" />
			</basic>
			<basic name="expMethod">
				<column length="255" />
			</basic>
			<basic name="resolution"></basic>
			<basic name="rfreeValue"></basic>
			
			<basic name="cellA"></basic>
			<basic name="cellB"></basic>
			<basic name="cellC"></basic>
			<basic name="cellAlpha"></basic>
			<basic name="cellBeta"></basic>
			<basic name="cellGamma"></basic>
			
			<basic name="ncsOpsPresent"></basic>
			
			<basic name="nonStandardSg"></basic>
			<basic name="nonStandardCoordFrameConvention"></basic>
			
			<basic name="exhaustiveAssemblyEnumeration"></basic>
			
			<basic name="maxNumClashesAnyInterface"></basic>
			
			<basic name="crystalFormId"></basic>
			
			<basic name="numChainClusters"></basic>

			<one-to-many name="interfaceClusters" mapped-by="pdbInfo" fetch="LAZY">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>

			<one-to-many name="chainClusters" mapped-by="pdbInfo" fetch="LAZY">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>

			<one-to-many name="assemblies" mapped-by="pdbInfo" fetch="LAZY">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>

			<one-to-one name="runParameters" fetch="LAZY">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-one>

			<one-to-one name="job" fetch="LAZY">
			</one-to-one>

			<!-- element-collection name="homologsInfoItems" -->
			<!-- collection-table name="NUMHOMOLOGSSTRINGS" -->
			<!-- /collection-table -->
			<!-- /element-collection -->
		</attributes>
	</entity>

	<entity class="eppic.model.db.AssemblyDB" name="Assembly">
		<table name="Assembly" />
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			
			<basic name="id">
			</basic>
			
			<basic name="pdbCode">
				<column length="4" />
			</basic>

			<basic name="unitCellAssembly">
			</basic>
			
			<basic name="topologicallyValid">
			</basic>

			<!-- Entries like ribosomes can have very long list of interfaces here, we need text -->
			<basic name="interfaceClusterIds">
				<column length="20000" />
			</basic>

			<many-to-one name="pdbInfo">
			</many-to-one>
			
			<one-to-many name="assemblyScores" mapped-by="assembly">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>

			<one-to-many name="assemblyContents" mapped-by="assembly">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>

			<one-to-many name="graphNodes" mapped-by="assembly" fetch="LAZY">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
			<one-to-many name="graphEdges" mapped-by="assembly" fetch="LAZY">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>

			<many-to-many name="interfaceClusters">
				<join-table name="InterfaceClusterAssembly">
					<join-column name="assembly_uid"
						referenced-column-name="uid" />
					<inverse-join-column name="interfaceCluster_uid"
						referenced-column-name="uid" />
				</join-table>
			</many-to-many>			

		</attributes>
	</entity>
	
	<entity class="eppic.model.db.AssemblyContentDB" name="AssemblyContent">
		<table name="AssemblyContent" />
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			
			<basic name="pdbCode">
				<column length="4" />
			</basic>
			
			<basic name="mmSize">
			</basic>
			<basic name="symmetry">
				<column length="10"/>
			</basic>
			<!--
			Note there's an overall limit per *table* of 65535 for the size of all varchars. Beyond that
			varchars must be converted to text -->
			<basic name="composition">
			<!-- Some large structures, specially viral capsid proteins with NCS operators can have
			     very long list of chains in their assemblies -->
				<column length="15000" />
			</basic>
			<basic name="compositionRepChainIds">
				<column length="15000" />
			</basic>
			<basic name="stoichiometry">
				<!-- Some large structures, specially viral capsid proteins with NCS operators can have
     			very long list of chains in their assemblies -->
				<column length="15000" />
			</basic>
			<!-- Some large structures, specially viral capsid proteins with NCS operators can have
			     very long list of chains in their assemblies -->
			<basic name="chainIds">
				<column length="15000" />
			</basic>
						
			<many-to-one name="assembly">
			</many-to-one>

		</attributes>
	</entity>

	<entity class="eppic.model.db.AssemblyScoreDB" name="AssemblyScore">
		<table name="AssemblyScore" />
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			
			<basic name="pdbCode">
				<column length="4" />
			</basic>

			<basic name="method">
				<column length="15" />
			</basic>

			<basic name="callName">
			</basic>
			<basic name="callReason">
			</basic>
			
			<basic name="score">
			</basic>
			<basic name="confidence">
			</basic>

			<many-to-one name="assembly">
			</many-to-one>

		</attributes>
	</entity>

	<entity class="eppic.model.db.GraphNodeDB" name="GraphNode">
		<table name="GraphNode"/>
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY"/>
			</id>

			<basic name="label">
				<column length="10"/>
			</basic>
			<basic name="color">
				<column length="6"/>
			</basic>

			<basic name="inGraph2d">
			</basic>

			<!-- These 2 will be 0 when they don't apply (inGraph2d=false)-->
			<basic name="pos2dX">
			</basic>
			<basic name="pos2dY">
			</basic>

			<basic name="pos3dX">
			</basic>
			<basic name="pos3dY">
			</basic>
			<basic name="pos3dZ">
			</basic>

			<basic name="in3dStructure">
			</basic>

			<basic name="rxx">
			</basic>
			<basic name="rxy">
			</basic>
			<basic name="rxz">
			</basic>
			<basic name="ryx">
			</basic>
			<basic name="ryy">
			</basic>
			<basic name="ryz">
			</basic>
			<basic name="rzx">
			</basic>
			<basic name="rzy">
			</basic>
			<basic name="rzz">
			</basic>
			<basic name="tx">
			</basic>
			<basic name="ty">
			</basic>
			<basic name="tz">
			</basic>


			<many-to-one name="assembly">
			</many-to-one>

		</attributes>
	</entity>

	<entity class="eppic.model.db.GraphEdgeDB" name="GraphEdge">
		<table name="GraphEdge"/>
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY"/>
			</id>

			<basic name="label">
			</basic>

			<basic name="interfaceId">
			</basic>

			<basic name="interfaceClusterId">
			</basic>

			<basic name="color">
				<column length="6"/>
			</basic>

			<basic name="inGraph2d">
			</basic>

			<basic name="xtalTransA">
			</basic>
			<basic name="xtalTransB">
			</basic>
			<basic name="xtalTransC">
			</basic>

			<basic name="node1Label">
				<column length="10"/>
			</basic>
			<basic name="node2Label">
				<column length="10"/>
			</basic>

			<basic name="startPos3dX">
			</basic>
			<basic name="endPos3dX">
			</basic>
			<basic name="startPos3dY">
			</basic>
			<basic name="endPos3dY">
			</basic>
			<basic name="startPos3dZ">
			</basic>
			<basic name="endPos3dZ">
			</basic>

			<many-to-one name="assembly">
			</many-to-one>

		</attributes>
	</entity>

	<entity class="eppic.model.db.InterfaceClusterDB" name="InterfaceCluster">
		<table name="InterfaceCluster" />
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>

			<basic name="clusterId">
			</basic>
			<basic name="pdbCode">
				<column length="4" />
			</basic>
			
			<basic name="avgArea">
			</basic>
			<basic name="avgContactOverlapScore">
			</basic>
			
			<basic name="infinite">
			</basic>
			<basic name="isologous">
			</basic>
			
			<basic name="numMembers">
			</basic>
			
			<basic name="globalInterfClusterId">
			</basic>

			<many-to-one name="pdbInfo">
			</many-to-one>

			<one-to-many name="interfaces" mapped-by="interfaceCluster">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>

			<one-to-many name="interfaceClusterScores" mapped-by="interfaceCluster">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>
			
			<many-to-many name="assemblies" mapped-by="interfaceClusters">
				<cascade>
					<cascade-all />
				</cascade>
			</many-to-many>

		</attributes>
	</entity>

	<entity class="eppic.model.db.InterfaceClusterScoreDB" name="InterfaceClusterScore">
		<table name="InterfaceClusterScore" />
		<entity-listeners>
			<entity-listener
				class="eppic.model.adapters.ClusterScoreListener">
			</entity-listener>
		</entity-listeners>
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="pdbCode">
				<column length="4" />
			</basic>
			<basic name="method">
				<column length="15" />
			</basic>
			<basic name="clusterId">
			</basic>
			<basic name="score">
				<column nullable="true" />
			</basic>
			<basic name="score1">
				<column nullable="true" />
			</basic>
			<basic name="score2">
				<column nullable="true" />
			</basic>			
			<basic name="callName">
				<column length="6" />
			</basic>
			<basic name="callReason">
				<column length="10000" />
			</basic>
			<basic name="confidence"></basic>			

			<many-to-one name="interfaceCluster">
			</many-to-one>
		</attributes>
	</entity>

	<entity class="eppic.model.db.InterfaceDB" name="Interface">
		<table name="Interface" />
		<entity-listeners>
			<entity-listener
				class="eppic.model.adapters.InterfaceListener">
			</entity-listener>
		</entity-listeners>
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="pdbCode">
				<column length="4" />
			</basic>
			<basic name="interfaceId"></basic>
			<basic name="clusterId"></basic>
			<basic name="area"></basic>
			<basic name="chain1">
				<column length="4" />
			</basic>
			<basic name="chain2">
				<column length="4" />
			</basic>
			<basic name="operator">
				<column length="25" />
			</basic>
			<basic name="operatorType">
				<column length="5" />
			</basic>
			<basic name="infinite"></basic>
			<basic name="isologous"></basic>
			
			<basic name="selfContactOverlapScore"></basic>
			
			<basic name="prot1"></basic>
			<basic name="prot2"></basic>
			
			<basic name="xtalTrans_x"></basic>
			<basic name="xtalTrans_y"></basic>
			<basic name="xtalTrans_z"></basic>
			<basic name="operatorId"></basic>
			
			<basic name="globalInterfClusterId"></basic>

			<many-to-one name="interfaceCluster">
			</many-to-one>

			<one-to-many name="interfaceScores" mapped-by="interfaceItem">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>

			<one-to-many name="residueBurials" mapped-by="interfaceItem">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>

			<one-to-many name="contacts" mapped-by="interfaceItem">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
			
			<one-to-many name="interfaceWarnings" mapped-by="interfaceItem">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>

			<!-- element-collection name="warnings" -->
			<!-- collection-table name="WARNINGS" -->
			<!-- /collection-table -->
			<!-- /element-collection -->
		</attributes>
	</entity>

	<entity class="eppic.model.db.ResidueBurialDB" name="ResidueBurial">
		<table name="ResidueBurial" />
		<entity-listeners>
			<entity-listener
				class="eppic.model.adapters.ResidueBurialListener">
			</entity-listener>
		</entity-listeners>
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>

			<basic name="side"></basic>
			
			<basic name="asa"></basic>
			<basic name="bsa"></basic>
			
			<!-- TODO the field is now a short, we should double check that it translates to a data
			     type that takes less space than int in mysql. Other solution would be to force type 
			     smallint here but I don't know how to do that -->
			<basic name="region"></basic>


			<many-to-one name="interfaceItem">
			</many-to-one>
			
			<many-to-one name="residueInfo">
			</many-to-one>
			
		</attributes>
	</entity>
	
	<entity class="eppic.model.db.ResidueInfoDB" name="ResidueInfo">
		<table name="ResidueInfo"/>
		<entity-listeners>
			<entity-listener
				class="eppic.model.adapters.ResidueInfoListener">
			</entity-listener>
		</entity-listeners>
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			
			<basic name="repChain">
				<column length="4" />
			</basic>
			<basic name="pdbCode">
				<column length="4" />
			</basic>
		
			<basic name="residueNumber"></basic>
			<basic name="pdbResidueNumber"></basic>
			<basic name="residueType">
				<column length="3" />
			</basic>
			
			<basic name="uniProtNumber"></basic>
			<basic name="mismatchToRef"></basic>
			
			<basic name="entropyScore"></basic>
			
			
			<many-to-one name="chainCluster">
			</many-to-one>
			
			<!-- Not adding the one to many to ResidueBurials because it's not so useful.
				 It's only needed in the other direction -->
			<!-- 
			<one-to-many name="residueBurials" mapped-by="residueInfo">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>
			-->
		
		</attributes>
	</entity>
	
	<entity class="eppic.model.db.ContactDB" name="Contact">
		<table name="Contact" />
		<entity-listeners>
			<entity-listener
				class="eppic.model.adapters.ContactListener">
			</entity-listener>
		</entity-listeners>			
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="firstResNumber"></basic>
			<basic name="firstResType">
				<column length="3" />
			</basic>
			<basic name="firstBurial"></basic>			
			<basic name="secondResNumber"></basic>
			<basic name="secondResType">
				<column length="3" />
			</basic>
			<basic name="secondBurial"></basic>
			
			<basic name="minDistance"></basic>
			<basic name="numAtoms"></basic>
			<basic name="numHBonds"></basic>
			<basic name="disulfide"></basic>
			<basic name="clash"></basic>			

			<basic name="pdbCode">
				<column length="4" />
			</basic>
			<basic name="interfaceId"></basic>			

			<many-to-one name="interfaceItem">
			</many-to-one>
		</attributes>
	</entity>

	<entity class="eppic.model.db.InterfaceScoreDB" name="InterfaceScore">
		<table name="InterfaceScore" />
		<entity-listeners>
			<entity-listener
				class="eppic.model.adapters.InterfaceScoreListener">
			</entity-listener>
		</entity-listeners>
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="pdbCode">
				<column length="4" />
			</basic>
			<basic name="method">
				<column length="15" />
			</basic>
			<basic name="interfaceId"></basic>
			<basic name="score1">
				<column nullable="true" />
			</basic>
			<basic name="score2">
				<column nullable="true" />
			</basic>
			<basic name="score">
				<column nullable="true" />
			</basic>
			<basic name="callName">
				<column length="6" />
			</basic>
			<basic name="callReason">
				<column length="10000" />
			</basic>
			<basic name="confidence"></basic>

			<many-to-one name="interfaceItem">
			</many-to-one>
		</attributes>
	</entity>

	<entity class="eppic.model.db.InterfaceWarningDB" name="InterfaceWarning">
		<table name="InterfaceWarning" />
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="text">
				<column length="15000" />
			</basic>

			<many-to-one name="interfaceItem">
			</many-to-one>
		</attributes>
	</entity>

	<entity class="eppic.model.db.RunParametersDB" name="RunParameters">
		<table name="RunParameters" />
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="homSoftIdCutoff"></basic>
			<basic name="homHardIdCutoff"></basic>
			<basic name="queryCovCutoff"></basic>
			<basic name="minNumSeqsCutoff"></basic>
			<basic name="maxNumSeqsCutoff"></basic>
			<basic name="alphabet"></basic>
			<basic name="caCutoffForGeom"></basic>
			<basic name="caCutoffForCoreRim"></basic>
			<basic name="caCutoffForCoreSurface"></basic>
			<basic name="geomCallCutoff"></basic>
			<basic name="crCallCutoff"></basic>
			<basic name="csCallCutoff"></basic>
			<basic name="searchMode"></basic>

			<basic name="uniProtVersion">
				<column length="10" />
			</basic>
			<basic name="eppicVersion">
				<column length="35" />
			</basic>
			<basic name="eppicBuild">
				<!-- Setting it to 50 after looking at some examples with length just over 40 - JD 2016-11-27 -->
				<column length="50" />
			</basic>

			<one-to-one name="pdbInfo" mapped-by="runParameters">
			</one-to-one>
		</attributes>
	</entity>

	<entity class="eppic.model.db.ChainClusterDB" name="ChainCluster">
		<table name="ChainCluster" />
		<entity-listeners>
			<entity-listener
				class="eppic.model.adapters.ChainClusterListener">
			</entity-listener>
		</entity-listeners>
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>

			<basic name="repChain">
				<column length="4" />
			</basic>
			<basic name="memberChains"></basic>
			<basic name="numMembers"></basic>
			<basic name="refUniProtId"></basic>
			<basic name="refUniProtStart"></basic>
			<basic name="refUniProtEnd"></basic>
			<basic name="pdbStart"></basic>
			<basic name="pdbEnd"></basic>
			
			<basic name="protein"></basic>
			
			<basic name="hasUniProtRef"></basic>
			<basic name="seqIdCutoff"></basic>
			<basic name="clusteringSeqId"></basic>
			
			<basic name="pdbAlignedSeq">
				<column column-definition="text" />
			</basic>
			<basic name="refAlignedSeq">
				<column column-definition="text" />
			</basic>
			
			<basic name="msaAlignedSeq">
				<column column-definition="text" />
			</basic>
			<basic name="numHomologs"></basic>
			
			<basic name="firstTaxon"></basic>
			<basic name="lastTaxon"></basic>
			
			<basic name="pdbCode">
				<column length="4" />
			</basic>

			<many-to-one name="pdbInfo">
			</many-to-one>

			<one-to-many name="uniProtRefWarnings" mapped-by="chainCluster">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>
			
			<one-to-many name="homologs" mapped-by="chainCluster">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>
			
			<one-to-many name="residueInfos" mapped-by="chainCluster">
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>			
			
			<one-to-one name="seqCluster" mapped-by="chainCluster">
 				<cascade>
 					<cascade-all />
 				</cascade>
 			</one-to-one>
			
		</attributes>
	</entity>

	<entity class="eppic.model.db.SeqClusterDB" name="SeqCluster">
		<table name="SeqCluster" />
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>

			
			<basic name="pdbCode"></basic>

			<!-- 
			The chain code is actually case sensitive but MySQL by default uses a case insensitive 
			collation (ci). The WUI actually needs it to be case sensitive since the repChain is 
			part of the primary key when the sequence clusters are queried by providing a 
			pdbCode+repChain in the URL. 
			Instead of explicitly defining a case sensitive	collation for this column only, we do 
			it for the whole server using the 'collation-server=latin1_general_cs' setting. Otherwise
			other things break while trying to query (in offline analyses), e.g. one needs to use binary
			comparisons to be case sensitive but the binary comparisons don't use indexes and thus they 
			are slow.
			See issues 
			https://github.com/eppic-team/eppic-wui/issues/4 
			https://github.com/eppic-team/eppic/issues/36 
			-->
			<basic name="repChain">
				<column length="4" />
			</basic>
			
			<basic name="c100"></basic>
			<basic name="c95"></basic>
			<basic name="c90"></basic>
			<basic name="c80"></basic>
			<basic name="c70"></basic>
			<basic name="c60"></basic>
			<basic name="c50"></basic>
			<basic name="c40"></basic>
			<basic name="c30"></basic>

			<one-to-one name="chainCluster">
			</one-to-one>
			
		</attributes>
	</entity>

	<entity class="eppic.model.db.HomologDB" name="Homolog">
		<table name="Homolog" />
		<entity-listeners>
			<entity-listener
				class="eppic.model.adapters.HomologListener">
			</entity-listener>
		</entity-listeners>
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>

			<basic name="uniProtId"></basic>
			<basic name="firstTaxon">
				<column length="255" />
			</basic>
			<basic name="lastTaxon">
				<column length="255" />
			</basic>
			<basic name="seqId"></basic>
			<basic name="queryCoverage"></basic>
			
			<basic name="queryStart"></basic>
			<basic name="queryEnd"></basic>

			<basic name="subjectStart"></basic>
			<basic name="subjectEnd"></basic>			
			
			<basic name="alignedSeq">
				<column column-definition="text" />
			</basic>

			<many-to-one name="chainCluster">
			</many-to-one>

		</attributes>
	</entity>

	<entity class="eppic.model.db.UniProtRefWarningDB" name="UniProtRefWarning">
		<table name="UniProtRefWarning" />
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="text">
				<column length="10000" />
			</basic>

			<many-to-one name="chainCluster">
			</many-to-one>
		</attributes>
	</entity>

	<entity class="eppic.model.db.HitHspDB" name="HitHsp">
		<table name="HitHsp">
			<!-- All requests will be via queryId, so this is important -->
			<index name="queryId_idx" column-list="queryId" unique="false"/>
		</table>
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="queryId">
			</basic>
			<basic name="subjectId">
			</basic>
			<basic name="percentIdentity">
			</basic>
			<basic name="aliLength">
			</basic>
			<basic name="numMismatches">
			</basic>
			<basic name="numGapOpenings">
			</basic>
			<basic name="queryStart">
			</basic>
			<basic name="queryEnd">
			</basic>
			<basic name="subjectStart">
			</basic>
			<basic name="subjectEnd">
			</basic>
			<basic name="eValue">
			</basic>
			<basic name="bitScore">
			</basic>
		</attributes>
	</entity>

	<entity class="eppic.model.db.UniProtMetadataDB" name="UniProtMetadata">
		<table name="UniProtMetadata">
		</table>
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="uniRefType">
			</basic>
			<basic name="version">
			</basic>
		</attributes>
	</entity>

	<entity class="eppic.model.db.UniProtInfoDB" name="UniProtInfo">
		<table name="UniProtInfo">
			<!-- All requests will be via uniId, so this is important -->
			<index name="uniId_idx" column-list="uniId" unique="true"/>
		</table>
		<attributes>
			<id name="uid">
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="uniId">
			</basic>
			<basic name="sequence">
				<!-- As of Sept 2018, info from uniprot.org: the longest sequence is A0A1V4K6M4 at 36,991 AA  -->
				<column length="40000" />
			</basic>
			<basic name="firstTaxon">
			</basic>
			<basic name="lastTaxon">
			</basic>

		</attributes>
	</entity>

</entity-mappings>