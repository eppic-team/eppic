<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0                                      http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.eppic-web</groupId>
		<artifactId>eppic</artifactId>
		<version>3.0.3-SNAPSHOT</version>
	</parent>

	<artifactId>eppic-model</artifactId>

	<dependencies>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<version>1.0.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<version>${hibernate.version}</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<!-- This solves the 'no source code is available' problem for gwt compilation.
			 The issue came when we moved the share.model DTO classes (ch.systemsx.sybit.crkwebui.shared.model) 
			 from eppic-wui to the eppic-model project. GWT wouldn't be able to compile with the mentioned error -->
 
		<resources>
        	<resource>
            <directory>src/main/java</directory>
            <includes>
                <include>**/*.java</include>
            </includes>
        	</resource>
        	<resource>
            <directory>src/main/resources</directory>
            <includes>
                <include>**/*.*xml</include>
                <include>**/*.*properties</include>
            </includes>
        	</resource>
    	</resources>

	
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgument>-proc:none</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>2.2.4</version>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<outputDirectory>target/metamodel</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/metamodel</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- the gwt plugin so that sources are understood by eppic-wui -->
			<!-- This is apparently a better solution than the one above, -->
			<!-- see http://mojo.codehaus.org/gwt-maven-plugin/user-guide/multiproject.html -->

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwt.version}</version>
				
				<!-- This solution from http://stackoverflow.com/questions/9549303/no-source-code-is-available-for-type-gwt-compilation-error 
				     did not solve the problem of 'no source code available' for gwt compilation. Including the sources explicitly (see above) did solve it -->
				<!-- 
				<configuration>
                    <compileSourcesArtifacts>
                        <compileSourcesArtifact>org.eppic-web:eppic-model</compileSourcesArtifact>
                    </compileSourcesArtifacts>
                </configuration>
                -->
                
				<executions>
					<execution>
						<goals>
							<goal>resources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--This plugin's configuration is used to store Eclipse m2e settings 
				only. It has no influence on the Maven build itself. -->
			<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
				<configuration>
					<lifecycleMappingMetadata>
						<pluginExecutions>
							<pluginExecution>
								<pluginExecutionFilter>
									<groupId>
										org.codehaus.mojo
									</groupId>
									<artifactId>
										gwt-maven-plugin
									</artifactId>
									<versionRange>
										[2.6.1,)
									</versionRange>
									<goals>
										<goal>resources</goal>
									</goals>
								</pluginExecutionFilter>
								<action>
									<ignore />
								</action>
							</pluginExecution>
						</pluginExecutions>
					</lifecycleMappingMetadata>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
