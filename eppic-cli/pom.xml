<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
        <parent>
                <groupId>org.eppic-web</groupId>
                <artifactId>eppic</artifactId>
                <version>3.0-SNAPSHOT</version>
        </parent>
        <artifactId>eppic-cli</artifactId>

	<properties>
		<biojava.version>4.1.0-SNAPSHOT</biojava.version>
	</properties>
	
	<repositories>
		<!-- for uniprot japi -->
		<repository>
        	<id>ebi-repo</id>
        	<name>ebi-repo</name>
        	<url>http://www.ebi.ac.uk/~maven/m2repo</url>
    	</repository>		 
	</repositories>
	
	
	<dependencies>
	
	    <dependency>
			<groupId>org.eppic-web</groupId>
			<artifactId>eppic-model</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>java3d</groupId>
			<artifactId>vecmath</artifactId>
			<version>1.3.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.biojava</groupId>
       		<artifactId>biojava-core</artifactId>
        	<version>${biojava.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.biojava</groupId>
       		<artifactId>biojava-structure-gui</artifactId>
        	<version>${biojava.version}</version>
		</dependency>

		<dependency>
			<groupId>org.biojava</groupId>
       		<artifactId>biojava-structure</artifactId>
        	<version>${biojava.version}</version>
		</dependency>
	
		<!-- junit -->
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>


		<!-- logging -->

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- binding for log4j 2 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
			<scope>compile</scope>
		</dependency>
		<!-- Log4j API and Core implementation required for binding -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
			<scope>compile</scope>
		</dependency>
	
		<!-- jgrapht for assembly package -->
		<dependency>
			<groupId>org.jgrapht</groupId>
			<artifactId>jgrapht-core</artifactId>
			<version>0.9.0</version>
		</dependency>
                     
		<!-- others -->

		<dependency>
			<groupId>gnu.getopt</groupId>
			<artifactId>java-getopt</artifactId>
			<version>1.0.13</version>
		</dependency>
                        
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math</artifactId>
			<version>2.2</version>
		</dependency>

		<!-- uniprot -->
		<dependency>
        	<groupId>uk.ac.ebi.uniprot.kraken</groupId>
        	<artifactId>uniprotjapi</artifactId>   
        	<version>2014.10</version>     	
    	</dependency>
		
		
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.14</version>
		</dependency>
		
				
	</dependencies>
	
	<build>
		
		<!-- one possible way to include sources in jar for gwt compiler to be able to work in eppic-wui -->
		<!-- 
     	<resources>
        	<resource>
            <directory>src/main/java</directory>
            <includes>
                <include>**/*.java</include>
            </includes>
        	</resource>
        	<resource>
            <directory>src/main/resources</directory>
            <includes>
                <include>**/*.*xml</include>
                <include>**/*.*properties</include>
            </includes>
        	</resource>
    	</resources>
    	-->
    			
		<plugins>
			<!-- jar plugin to add eppic's main class, so that the jar is executable -->
			<plugin>
        		<groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-jar-plugin</artifactId>
        		<version>2.4</version>
        		<configuration>
			    	<archive>
            			<manifest>
              				<addClasspath>true</addClasspath>
							<mainClass>eppic.Main</mainClass>
            			</manifest>
          			</archive>
		        </configuration>
			</plugin>

       		<plugin>
             		<groupId>org.apache.maven.plugins</groupId>
              		<artifactId>maven-compiler-plugin</artifactId>
               		<version>3.1</version>
               		<configuration>
                    		<source>${java.version}</source>
                    		<target>${java.version}</target>
               		</configuration>
          	</plugin>

		
			<!-- the shade plugin to repack all jars into one uber-jar -->			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
	              			<artifactSet>
	                			<excludes>
	                  				
	                  				<!--  excluding the uniprot japi jar, there's no point in including it in the uber-jar for 
	                  				      distribution, since it gets updated every month. It has to be downloaded by the user -->	                  				
	                  				<exclude>uk.ac.ebi.uniprot.kraken</exclude>

	                			</excludes>
	              			</artifactSet>
	              			<filters>
        						<filter>
        							<!-- solution to the signature repackaging problem is this filter: exclude the signatures!  -->
            						<artifact>*:*</artifact>
            						<excludes>
                						<exclude>META-INF/*.SF</exclude>
                						<exclude>META-INF/*.DSA</exclude>
                						<exclude>META-INF/*.RSA</exclude>
            						</excludes>
        						</filter>
    						</filters>
           				</configuration>
					</execution>
				</executions>
				<configuration>
					<finalName>uber-${project.artifactId}-${project.version}</finalName>
				</configuration>
			</plugin>
			
			<!-- assembly plugin for final packaging -->
			<plugin>
  				<groupId>org.apache.maven.plugins</groupId>
  				<artifactId>maven-assembly-plugin</artifactId>
  				<configuration>
    				<descriptor>src/assembly/bin.xml</descriptor>
    				<finalName>${project.artifactId}-${project.version}</finalName>
    
					<archiverConfig>
						<fileMode>0644</fileMode>
						<directoryMode>0755</directoryMode>
						<defaultDirectoryMode>0755</defaultDirectoryMode>
					</archiverConfig>
					
  				</configuration>
  				
  				<executions>
    				<execution>
      					<phase>package</phase>
      					<goals>
        					<goal>single</goal>
      					</goals>
    				</execution>
  				</executions>
			</plugin>
			
		</plugins>
	</build>
	
	
	
	
</project>
