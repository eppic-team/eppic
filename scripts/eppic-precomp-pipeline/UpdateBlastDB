#!/bin/bash
#**************************************************************
#  EPPIC Pre-Computation Script
#  Author : Kumaran Baskaran
#  Date   : 05/07/2013
#***************************************************************

help="\t\tUsage : $0 \n
	\t\t [-d <dir-path> : base local dir should contain subdirs named uniprot_yyyy_mm]\n
\t\tExample : ./Download files -d ~/Downloads "

if (($# == 0)); then
	echo "`date +%d/%m/%y-%H:%M:%S` ERROR: Script requires arguments" >&2
	echo -e $help
	exit 1;
fi

while getopts :d:h opt
do
	case $opt in 
	d) LOCALDIR=$OPTARG;;
	h) echo -e $help;;
	\?) echo "`date +%d/%m/%y-%H:%M:%S` ERROR: Invalid option: -$OPTARG" >&2
		exit 1;;
	:) echo "`date +%d/%m/%y-%H:%M:%S` ERROR: Option -$OPTARG requires an argument." >&2
		exit 1;;
	esac
done
if [ ! -d $LOCALDIR ]
then 
	mkdir -p $LOCALDIR
fi
CURRENT="$LOCALDIR/current"
DOWNLOAD="$LOCALDIR/download"

MAKEBLASTDB=makeblastdb

#SITE="ftp://ftp.uniprot.org/pub" # US main ftp
SITE="ftp://ftp.ebi.ac.uk/pub" # UK mirror
# the swiss mirror doesn't seem to update properly, not using it anymore
#SITE="ftp://ftp.expasy.org" # swiss mirror
 

COMPLETEKBDIR="databases/uniprot/current_release/knowledgebase/complete"
UNIREFDIR="databases/uniprot/uniref/uniref100"

SIFTSPDB2UNIPROTFTP="ftp://ftp.ebi.ac.uk/pub/databases/msd/sifts/text/pdb_chain_uniprot.lst"


UNIREF100="uniref100.fasta"
UNIREF100GZ="uniref100.fasta.gz"
RELDATEFILE="reldate.txt"
SIFTSPDB2UNIPROT="pdb_chain_uniprot.lst"

uref100url="$SITE/$UNIREFDIR/$UNIREF100GZ"
reldateurl="$SITE/$COMPLETEKBDIR/$RELDATEFILE"

logfile="makeblastdb.log"


# remove existing download directory if there was one
rm -rf $DOWNLOAD
# create the download dir
mkdir $DOWNLOAD

# getting the release date file if newer available
release=""
curl -z $CURRENT/$RELDATEFILE $reldateurl > $DOWNLOAD/$RELDATEFILE
if [ -s "$DOWNLOAD/$RELDATEFILE" ]
then
	release=`head -1 $DOWNLOAD/$RELDATEFILE | sed "s/UniProt Knowledgebase Release \(...._..\).*/\1/"`
	echo "`date +%d/%m/%y-%H:%M:%S` INFO: New uniprot release $release available. Downloading files."
else
	echo "`date +%d/%m/%y-%H:%M:%S` INFO: No new uniprot release available. Exiting"
	rm -rf $DOWNLOAD
	exit 0
fi


curl -z $CURRENT/$UNIREF100 $uref100url > $DOWNLOAD/${UNIREF100}.gz
if [ -s "$DOWNLOAD/${UNIREF100}.gz" ]
then
    echo "`date +%d/%m/%y-%H:%M:%S` INFO: New Uniref100 version downloaded"
else
    echo "`date +%d/%m/%y-%H:%M:%S` INFO: Remote Uniref100 file not newer than local one. Something wrong. Exiting"
    exit 1
fi


# run makeblastdb (new name for formatdb)
# NOTE: formatdb appends the path used to run it to the .pal index file, 
# thus if the path used is an absolute path it's effectively hard coding 
# them making the directory not movable. That's why we have to cd to the
# DOWNLOAD dir first, so that there's no hard-coded paths in the .pal file
# NOTE2: not sure if makeblastdb still behaves like that, nevertheless we
# 		still do as explained above. 


echo "`date +%d/%m/%y-%H:%M:%S` INFO: Running makeblastdb..."

cd $DOWNLOAD

gunzip -c $UNIREF100GZ | $MAKEBLASTDB -dbtype prot -logfile $logfile -parse_seqids -out $UNIREF100 -title $UNIREF100


#renaming DOWNLOAD dir to uniprot version and updating current symlink
echo "`date +%d/%m/%y-%H:%M:%S` INFO: Creating new symlink..."
cd ..
mv download uniprot_$release
rm -f current
ln -s uniprot_$release current

echo "`date +%d/%m/%y-%H:%M:%S` INFO: Updating blast db Done"
