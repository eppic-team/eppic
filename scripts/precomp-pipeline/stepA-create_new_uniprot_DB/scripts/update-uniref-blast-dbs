#!/bin/sh
# Script to update a local Uniref100 copy with sequence files and generate blast+ dbs for them (makeblastdb)
# Will also download the SIFTS pdb2uniprot mapping file from EBI

if [ -z "$1" ]
then
	echo "Usage: $0 <base local dir>"
	echo 
	echo "The base local dir should contain subdirs named uniprot_yyyy_mm containing"
	echo "the corresponding blastable dbs. A symlink 'current' should point to the current"
	echo "one. A reldate.txt file in it will be checked and compared to the ftp's one in"
	echo "order to see if there is a new version available. The new version is then"
	echo "downloaded to uniprot_yyyy_mm dir and 'current' is symlinked to it."
	echo
	exit 1
fi
		

LOCALDIR=$1
CURRENT="$LOCALDIR/current"
DOWNLOAD="$LOCALDIR/download"

MAKEBLASTDB=makeblastdb

#SITE="ftp://ftp.uniprot.org/pub" # US main ftp
SITE="ftp://ftp.ebi.ac.uk/pub" # UK mirror
# the swiss mirror doesn't seem to update properly, not using it anymore
#SITE="ftp://ftp.expasy.org" # swiss mirror
 

COMPLETEKBDIR="databases/uniprot/current_release/knowledgebase/complete"
UNIREFDIR="databases/uniprot/uniref/uniref100"

SIFTSPDB2UNIPROTFTP="ftp://ftp.ebi.ac.uk/pub/databases/msd/sifts/text/pdb_chain_uniprot.lst"


UNIREF100="uniref100.fasta"
UNIREF100GZ="uniref100.fasta.gz"
RELDATEFILE="reldate.txt"
SIFTSPDB2UNIPROT="pdb_chain_uniprot.lst"

uref100url="$SITE/$UNIREFDIR/$UNIREF100GZ"
reldateurl="$SITE/$COMPLETEKBDIR/$RELDATEFILE"

logfile="$DOWNLOAD/makeblastdb.log"


# remove existing download directory if there was one
rm -rf $DOWNLOAD
# create the download dir
mkdir $DOWNLOAD

# getting the release date file if newer available
release=""
curl -z $CURRENT/$RELDATEFILE $reldateurl > $DOWNLOAD/$RELDATEFILE
if [ -s "$DOWNLOAD/$RELDATEFILE" ]
then
	release=`head -1 $DOWNLOAD/$RELDATEFILE | sed "s/UniProt Knowledgebase Release \(...._..\).*/\1/"`
	echo "New uniprot release $release available. Downloading files."
else
	echo "No new uniprot release available. Exiting"
	rm -rf $DOWNLOAD
	exit 0
fi


curl -z $CURRENT/$UNIREF100 $uref100url > $DOWNLOAD/${UNIREF100}.gz
if [ -s "$DOWNLOAD/${UNIREF100}.gz" ]
then
    echo "New Uniref100 version downloaded"
else
    echo "Remote Uniref100 file not newer than local one. Something wrong. Exiting"
    exit 1
fi

# getting the SIFTS PDB to UNIPROT mapping file
curl $SIFTSPDB2UNIPROTFTP > $DOWNLOAD/$SIFTSPDB2UNIPROT


# run makeblastdb (new name for formatdb)
# NOTE: formatdb appends the path used to run it to the .pal index file, 
# thus if the path used is an absolute path it's effectively hard coding 
# them making the directory not movable. That's why we have to cd to the
# DOWNLOAD dir first, so that there's no hard-coded paths in the .pal file
# NOTE2: not sure if makeblastdb still behaves like that, nevertheless we
# 		still do as explained above. 


echo "Running makeblastdb..."

cd $DOWNLOAD

gunzip -c $UNIREF100GZ | $MAKEBLASTDB -dbtype prot -logfile $logfile -parse_seqids -out $UNIREF100 -title $UNIREF100


#renaming DOWNLOAD dir to uniprot version and updating current symlink
echo "Creating new symlink..."
mv $DOWNLOAD $LOCALDIR/uniprot_$release
rm -f $CURRENT
cd $LOCALDIR
ln -s uniprot_$release current

echo "Done"
