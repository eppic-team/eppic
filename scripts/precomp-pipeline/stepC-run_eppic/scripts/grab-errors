#!/bin/sh

# --------------------------------------------------------------
# Script to grab errors of a particular type from logs dir and print a list file of all pdb's
#
# Author: Nikhil Biyani
# Date: 14/02/2013
#
# Hard-Coaded
# Output Log Files of the server contains files in format:
# Output Files: <Job_Name>.o<Job_ID>.<Task_ID>
# Error Files: <Job_Name>.e<Job_ID>.<Task_ID>
# ------------------------------------------------------------

# --------------------------------------------------------------
# Example Usage
# sh grab-errors.sh -l /output/logs/ -e java.lang
# ----------------------------------------------------------------

help=" Usage: $0 \n
	\t\t	[ -l <Logs Dir> \n 
	\t\t      -e <Error String to be grabed> ] \n
Example: sh grab-errors.sh -l /output/logs/ -e java.lang"

while getopts :l:e:h option
do
        case "${option}"
        in
                l) LOGS_DIR=${OPTARG};;
		e) ERROR_STR=${OPTARG};;
                h) echo -e $help;;
               \?) print >&2 $help
		   exit 1;;
		:) echo "Option -$OPTARG requires an argument." >&2
      		   exit 1;;
        esac
done

if [[ -z $LOGS_DIR ]] || [[ -z $ERROR_STR ]]
then
	echo -e "\n ---- SOME OPTIONS NOT SPECIFIED CORRECTLY ---- "
	echo -e $help
	exit 1
fi

WDIR=`pwd`
OUT_FILE=$WDIR/errstring.pdb.list

if [ -f $OUT_FILE ]; then 
	rm $OUT_FILE 
fi

cd $LOGS_DIR
for file in `grep -H "$ERROR_STR" *.e* | cut -f1 -d:`
do
	echo Occured in file $file..
	job_name=`cut -f1 -d'.'`
	job_id=`cut -f2 -d'.' | sed 's/e//'`
	task_id=`cut -f3 -d'.'`
	file_out=$job_name.o$job_id.$task_id
	pdbID=`grep '^Loading PDB data: ' $file_out | sed 's/Loading PDB data: //'`
	echo $pdbID >> $OUT_FILE
done

echo -e "Created following output files: \t
	$OUT_FILE : Errors during run of type $ERROR_STR"
